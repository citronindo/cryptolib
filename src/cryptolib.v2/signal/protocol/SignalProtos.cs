// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WhisperTextProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace citronindo.cryptolib.signal.protocol {

  /// <summary>Holder for reflection information generated from WhisperTextProtocol.proto</summary>
  public static partial class WhisperTextProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for WhisperTextProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WhisperTextProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlXaGlzcGVyVGV4dFByb3RvY29sLnByb3RvEgp0ZXh0c2VjdXJlIrsBCg1T",
            "aWduYWxNZXNzYWdlEhQKCnJhdGNoZXRLZXkYASABKAxIABIRCgdjb3VudGVy",
            "GAIgASgNSAESGQoPcHJldmlvdXNDb3VudGVyGAMgASgNSAISFAoKY2lwaGVy",
            "dGV4dBgEIAEoDEgDQhIKEHJhdGNoZWRLZXlfb25lb2ZCDwoNY291bnRlcl9v",
            "bmVvZkIXChVwcmV2aW91c0NvdW50ZXJfb25lb2ZCEgoQY2lwaGVydGV4dF9v",
            "bmVvZiKTAgoTUHJlS2V5U2lnbmFsTWVzc2FnZRIYCg5yZWdpc3RyYXRpb25J",
            "ZBgFIAEoDUgAEhIKCHByZUtleUlkGAEgASgNSAESGAoOc2lnbmVkUHJlS2V5",
            "SWQYBiABKA1IAhIRCgdiYXNlS2V5GAIgASgMSAMSFQoLaWRlbnRpdHlLZXkY",
            "AyABKAxIBBIRCgdtZXNzYWdlGAQgASgMSAVCFgoUcmVnaXN0cmF0aW9uSWRf",
            "b25lb2ZCEAoOcHJlS2V5SWRfb25lb2ZCFgoUc2lnbmVkUHJlS2V5SWRfb25l",
            "b2ZCDwoNYmFzZUtleV9vbmVvZkITChFpZGVudGl0eUtleV9vbmVvZkIPCg1t",
            "ZXNzYWdlX29uZW9mIt4BChJLZXlFeGNoYW5nZU1lc3NhZ2USDAoCaWQYASAB",
            "KA1IABIRCgdiYXNlS2V5GAIgASgMSAESFAoKcmF0Y2hldEtleRgDIAEoDEgC",
            "EhUKC2lkZW50aXR5S2V5GAQgASgMSAMSGgoQYmFzZUtleVNpZ25hdHVyZRgF",
            "IAEoDEgEQgoKCGlkX29uZW9mQg8KDWJhc2VLZXlfb25lb2ZCEgoQcmF0Y2hl",
            "dEtleV9vbmVvZkITChFpZGVudGl0eUtleV9vbmVvZkIYChZiYXNlS2V5U2ln",
            "bmF0dXJlX29uZW9mIn4KEFNlbmRlcktleU1lc3NhZ2USDAoCaWQYASABKA1I",
            "ABITCglpdGVyYXRpb24YAiABKA1IARIUCgpjaXBoZXJ0ZXh0GAMgASgMSAJC",
            "CgoIaWRfb25lb2ZCEQoPaXRlcmF0aW9uX29uZW9mQhIKEGNpcGhlcnRleHRf",
            "b25lb2YitgEKIlNpZ25hbFNlbmRlcktleURpc3RyaWJ1dGlvbk1lc3NhZ2US",
            "DAoCaWQYASABKA1IABITCglpdGVyYXRpb24YAiABKA1IARISCghjaGFpbktl",
            "eRgDIAEoDEgCEhQKCnNpZ25pbmdLZXkYBCABKAxIA0IKCghpZF9vbmVvZkIR",
            "Cg9pdGVyYXRpb25fb25lb2ZCEAoOY2hhaW5LZXlfb25lb2ZCEgoQc2lnbmlu",
            "Z0tleV9vbmVvZiJwChxEZXZpY2VDb25zaXN0ZW5jeUNvZGVNZXNzYWdlEhQK",
            "CmdlbmVyYXRpb24YASABKA1IABITCglzaWduYXR1cmUYAiABKAxIAUISChBn",
            "ZW5lcmF0aW9uX29uZW9mQhEKD3NpZ25hdHVyZV9vbmVvZkInqgIkY2l0cm9u",
            "aW5kby5jcnlwdG9saWIuc2lnbmFsLnByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.SignalMessage), global::citronindo.cryptolib.signal.protocol.SignalMessage.Parser, new[]{ "RatchetKey", "Counter", "PreviousCounter", "Ciphertext" }, new[]{ "RatchedKeyOneof", "CounterOneof", "PreviousCounterOneof", "CiphertextOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.PreKeySignalMessage), global::citronindo.cryptolib.signal.protocol.PreKeySignalMessage.Parser, new[]{ "RegistrationId", "PreKeyId", "SignedPreKeyId", "BaseKey", "IdentityKey", "Message" }, new[]{ "RegistrationIdOneof", "PreKeyIdOneof", "SignedPreKeyIdOneof", "BaseKeyOneof", "IdentityKeyOneof", "MessageOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.KeyExchangeMessage), global::citronindo.cryptolib.signal.protocol.KeyExchangeMessage.Parser, new[]{ "Id", "BaseKey", "RatchetKey", "IdentityKey", "BaseKeySignature" }, new[]{ "IdOneof", "BaseKeyOneof", "RatchetKeyOneof", "IdentityKeyOneof", "BaseKeySignatureOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.SenderKeyMessage), global::citronindo.cryptolib.signal.protocol.SenderKeyMessage.Parser, new[]{ "Id", "Iteration", "Ciphertext" }, new[]{ "IdOneof", "IterationOneof", "CiphertextOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.SignalSenderKeyDistributionMessage), global::citronindo.cryptolib.signal.protocol.SignalSenderKeyDistributionMessage.Parser, new[]{ "Id", "Iteration", "ChainKey", "SigningKey" }, new[]{ "IdOneof", "IterationOneof", "ChainKeyOneof", "SigningKeyOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::citronindo.cryptolib.signal.protocol.DeviceConsistencyCodeMessage), global::citronindo.cryptolib.signal.protocol.DeviceConsistencyCodeMessage.Parser, new[]{ "Generation", "Signature" }, new[]{ "GenerationOneof", "SignatureOneof" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SignalMessage : pb::IMessage<SignalMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignalMessage> _parser = new pb::MessageParser<SignalMessage>(() => new SignalMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignalMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalMessage(SignalMessage other) : this() {
      switch (other.RatchedKeyOneofCase) {
        case RatchedKeyOneofOneofCase.RatchetKey:
          RatchetKey = other.RatchetKey;
          break;
      }

      switch (other.CounterOneofCase) {
        case CounterOneofOneofCase.Counter:
          Counter = other.Counter;
          break;
      }

      switch (other.PreviousCounterOneofCase) {
        case PreviousCounterOneofOneofCase.PreviousCounter:
          PreviousCounter = other.PreviousCounter;
          break;
      }

      switch (other.CiphertextOneofCase) {
        case CiphertextOneofOneofCase.Ciphertext:
          Ciphertext = other.Ciphertext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalMessage Clone() {
      return new SignalMessage(this);
    }

    /// <summary>Field number for the "ratchetKey" field.</summary>
    public const int RatchetKeyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RatchetKey {
      get { return ratchedKeyOneofCase_ == RatchedKeyOneofOneofCase.RatchetKey ? (pb::ByteString) ratchedKeyOneof_ : pb::ByteString.Empty; }
      set {
        ratchedKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ratchedKeyOneofCase_ = RatchedKeyOneofOneofCase.RatchetKey;
      }
    }

    /// <summary>Field number for the "counter" field.</summary>
    public const int CounterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Counter {
      get { return counterOneofCase_ == CounterOneofOneofCase.Counter ? (uint) counterOneof_ : 0; }
      set {
        counterOneof_ = value;
        counterOneofCase_ = CounterOneofOneofCase.Counter;
      }
    }

    /// <summary>Field number for the "previousCounter" field.</summary>
    public const int PreviousCounterFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PreviousCounter {
      get { return previousCounterOneofCase_ == PreviousCounterOneofOneofCase.PreviousCounter ? (uint) previousCounterOneof_ : 0; }
      set {
        previousCounterOneof_ = value;
        previousCounterOneofCase_ = PreviousCounterOneofOneofCase.PreviousCounter;
      }
    }

    /// <summary>Field number for the "ciphertext" field.</summary>
    public const int CiphertextFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Ciphertext {
      get { return ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext ? (pb::ByteString) ciphertextOneof_ : pb::ByteString.Empty; }
      set {
        ciphertextOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ciphertextOneofCase_ = CiphertextOneofOneofCase.Ciphertext;
      }
    }

    private object ratchedKeyOneof_;
    /// <summary>Enum of possible cases for the "ratchedKey_oneof" oneof.</summary>
    public enum RatchedKeyOneofOneofCase {
      None = 0,
      RatchetKey = 1,
    }
    private RatchedKeyOneofOneofCase ratchedKeyOneofCase_ = RatchedKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RatchedKeyOneofOneofCase RatchedKeyOneofCase {
      get { return ratchedKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRatchedKeyOneof() {
      ratchedKeyOneofCase_ = RatchedKeyOneofOneofCase.None;
      ratchedKeyOneof_ = null;
    }

    private object counterOneof_;
    /// <summary>Enum of possible cases for the "counter_oneof" oneof.</summary>
    public enum CounterOneofOneofCase {
      None = 0,
      Counter = 2,
    }
    private CounterOneofOneofCase counterOneofCase_ = CounterOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CounterOneofOneofCase CounterOneofCase {
      get { return counterOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCounterOneof() {
      counterOneofCase_ = CounterOneofOneofCase.None;
      counterOneof_ = null;
    }

    private object previousCounterOneof_;
    /// <summary>Enum of possible cases for the "previousCounter_oneof" oneof.</summary>
    public enum PreviousCounterOneofOneofCase {
      None = 0,
      PreviousCounter = 3,
    }
    private PreviousCounterOneofOneofCase previousCounterOneofCase_ = PreviousCounterOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviousCounterOneofOneofCase PreviousCounterOneofCase {
      get { return previousCounterOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreviousCounterOneof() {
      previousCounterOneofCase_ = PreviousCounterOneofOneofCase.None;
      previousCounterOneof_ = null;
    }

    private object ciphertextOneof_;
    /// <summary>Enum of possible cases for the "ciphertext_oneof" oneof.</summary>
    public enum CiphertextOneofOneofCase {
      None = 0,
      Ciphertext = 4,
    }
    private CiphertextOneofOneofCase ciphertextOneofCase_ = CiphertextOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CiphertextOneofOneofCase CiphertextOneofCase {
      get { return ciphertextOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCiphertextOneof() {
      ciphertextOneofCase_ = CiphertextOneofOneofCase.None;
      ciphertextOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignalMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignalMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatchetKey != other.RatchetKey) return false;
      if (Counter != other.Counter) return false;
      if (PreviousCounter != other.PreviousCounter) return false;
      if (Ciphertext != other.Ciphertext) return false;
      if (RatchedKeyOneofCase != other.RatchedKeyOneofCase) return false;
      if (CounterOneofCase != other.CounterOneofCase) return false;
      if (PreviousCounterOneofCase != other.PreviousCounterOneofCase) return false;
      if (CiphertextOneofCase != other.CiphertextOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ratchedKeyOneofCase_ == RatchedKeyOneofOneofCase.RatchetKey) hash ^= RatchetKey.GetHashCode();
      if (counterOneofCase_ == CounterOneofOneofCase.Counter) hash ^= Counter.GetHashCode();
      if (previousCounterOneofCase_ == PreviousCounterOneofOneofCase.PreviousCounter) hash ^= PreviousCounter.GetHashCode();
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) hash ^= Ciphertext.GetHashCode();
      hash ^= (int) ratchedKeyOneofCase_;
      hash ^= (int) counterOneofCase_;
      hash ^= (int) previousCounterOneofCase_;
      hash ^= (int) ciphertextOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ratchedKeyOneofCase_ == RatchedKeyOneofOneofCase.RatchetKey) {
        output.WriteRawTag(10);
        output.WriteBytes(RatchetKey);
      }
      if (counterOneofCase_ == CounterOneofOneofCase.Counter) {
        output.WriteRawTag(16);
        output.WriteUInt32(Counter);
      }
      if (previousCounterOneofCase_ == PreviousCounterOneofOneofCase.PreviousCounter) {
        output.WriteRawTag(24);
        output.WriteUInt32(PreviousCounter);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        output.WriteRawTag(34);
        output.WriteBytes(Ciphertext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ratchedKeyOneofCase_ == RatchedKeyOneofOneofCase.RatchetKey) {
        output.WriteRawTag(10);
        output.WriteBytes(RatchetKey);
      }
      if (counterOneofCase_ == CounterOneofOneofCase.Counter) {
        output.WriteRawTag(16);
        output.WriteUInt32(Counter);
      }
      if (previousCounterOneofCase_ == PreviousCounterOneofOneofCase.PreviousCounter) {
        output.WriteRawTag(24);
        output.WriteUInt32(PreviousCounter);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        output.WriteRawTag(34);
        output.WriteBytes(Ciphertext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ratchedKeyOneofCase_ == RatchedKeyOneofOneofCase.RatchetKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RatchetKey);
      }
      if (counterOneofCase_ == CounterOneofOneofCase.Counter) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Counter);
      }
      if (previousCounterOneofCase_ == PreviousCounterOneofOneofCase.PreviousCounter) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PreviousCounter);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ciphertext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignalMessage other) {
      if (other == null) {
        return;
      }
      switch (other.RatchedKeyOneofCase) {
        case RatchedKeyOneofOneofCase.RatchetKey:
          RatchetKey = other.RatchetKey;
          break;
      }

      switch (other.CounterOneofCase) {
        case CounterOneofOneofCase.Counter:
          Counter = other.Counter;
          break;
      }

      switch (other.PreviousCounterOneofCase) {
        case PreviousCounterOneofOneofCase.PreviousCounter:
          PreviousCounter = other.PreviousCounter;
          break;
      }

      switch (other.CiphertextOneofCase) {
        case CiphertextOneofOneofCase.Ciphertext:
          Ciphertext = other.Ciphertext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RatchetKey = input.ReadBytes();
            break;
          }
          case 16: {
            Counter = input.ReadUInt32();
            break;
          }
          case 24: {
            PreviousCounter = input.ReadUInt32();
            break;
          }
          case 34: {
            Ciphertext = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RatchetKey = input.ReadBytes();
            break;
          }
          case 16: {
            Counter = input.ReadUInt32();
            break;
          }
          case 24: {
            PreviousCounter = input.ReadUInt32();
            break;
          }
          case 34: {
            Ciphertext = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreKeySignalMessage : pb::IMessage<PreKeySignalMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreKeySignalMessage> _parser = new pb::MessageParser<PreKeySignalMessage>(() => new PreKeySignalMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreKeySignalMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreKeySignalMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreKeySignalMessage(PreKeySignalMessage other) : this() {
      switch (other.RegistrationIdOneofCase) {
        case RegistrationIdOneofOneofCase.RegistrationId:
          RegistrationId = other.RegistrationId;
          break;
      }

      switch (other.PreKeyIdOneofCase) {
        case PreKeyIdOneofOneofCase.PreKeyId:
          PreKeyId = other.PreKeyId;
          break;
      }

      switch (other.SignedPreKeyIdOneofCase) {
        case SignedPreKeyIdOneofOneofCase.SignedPreKeyId:
          SignedPreKeyId = other.SignedPreKeyId;
          break;
      }

      switch (other.BaseKeyOneofCase) {
        case BaseKeyOneofOneofCase.BaseKey:
          BaseKey = other.BaseKey;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.MessageOneofCase) {
        case MessageOneofOneofCase.Message:
          Message = other.Message;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreKeySignalMessage Clone() {
      return new PreKeySignalMessage(this);
    }

    /// <summary>Field number for the "registrationId" field.</summary>
    public const int RegistrationIdFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegistrationId {
      get { return registrationIdOneofCase_ == RegistrationIdOneofOneofCase.RegistrationId ? (uint) registrationIdOneof_ : 0; }
      set {
        registrationIdOneof_ = value;
        registrationIdOneofCase_ = RegistrationIdOneofOneofCase.RegistrationId;
      }
    }

    /// <summary>Field number for the "preKeyId" field.</summary>
    public const int PreKeyIdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PreKeyId {
      get { return preKeyIdOneofCase_ == PreKeyIdOneofOneofCase.PreKeyId ? (uint) preKeyIdOneof_ : 0; }
      set {
        preKeyIdOneof_ = value;
        preKeyIdOneofCase_ = PreKeyIdOneofOneofCase.PreKeyId;
      }
    }

    /// <summary>Field number for the "signedPreKeyId" field.</summary>
    public const int SignedPreKeyIdFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SignedPreKeyId {
      get { return signedPreKeyIdOneofCase_ == SignedPreKeyIdOneofOneofCase.SignedPreKeyId ? (uint) signedPreKeyIdOneof_ : 0; }
      set {
        signedPreKeyIdOneof_ = value;
        signedPreKeyIdOneofCase_ = SignedPreKeyIdOneofOneofCase.SignedPreKeyId;
      }
    }

    /// <summary>Field number for the "baseKey" field.</summary>
    public const int BaseKeyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BaseKey {
      get { return baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey ? (pb::ByteString) baseKeyOneof_ : pb::ByteString.Empty; }
      set {
        baseKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        baseKeyOneofCase_ = BaseKeyOneofOneofCase.BaseKey;
      }
    }

    /// <summary>Field number for the "identityKey" field.</summary>
    public const int IdentityKeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString IdentityKey {
      get { return identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey ? (pb::ByteString) identityKeyOneof_ : pb::ByteString.Empty; }
      set {
        identityKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        identityKeyOneofCase_ = IdentityKeyOneofOneofCase.IdentityKey;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Message {
      get { return messageOneofCase_ == MessageOneofOneofCase.Message ? (pb::ByteString) messageOneof_ : pb::ByteString.Empty; }
      set {
        messageOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        messageOneofCase_ = MessageOneofOneofCase.Message;
      }
    }

    private object registrationIdOneof_;
    /// <summary>Enum of possible cases for the "registrationId_oneof" oneof.</summary>
    public enum RegistrationIdOneofOneofCase {
      None = 0,
      RegistrationId = 5,
    }
    private RegistrationIdOneofOneofCase registrationIdOneofCase_ = RegistrationIdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegistrationIdOneofOneofCase RegistrationIdOneofCase {
      get { return registrationIdOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegistrationIdOneof() {
      registrationIdOneofCase_ = RegistrationIdOneofOneofCase.None;
      registrationIdOneof_ = null;
    }

    private object preKeyIdOneof_;
    /// <summary>Enum of possible cases for the "preKeyId_oneof" oneof.</summary>
    public enum PreKeyIdOneofOneofCase {
      None = 0,
      PreKeyId = 1,
    }
    private PreKeyIdOneofOneofCase preKeyIdOneofCase_ = PreKeyIdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreKeyIdOneofOneofCase PreKeyIdOneofCase {
      get { return preKeyIdOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreKeyIdOneof() {
      preKeyIdOneofCase_ = PreKeyIdOneofOneofCase.None;
      preKeyIdOneof_ = null;
    }

    private object signedPreKeyIdOneof_;
    /// <summary>Enum of possible cases for the "signedPreKeyId_oneof" oneof.</summary>
    public enum SignedPreKeyIdOneofOneofCase {
      None = 0,
      SignedPreKeyId = 6,
    }
    private SignedPreKeyIdOneofOneofCase signedPreKeyIdOneofCase_ = SignedPreKeyIdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignedPreKeyIdOneofOneofCase SignedPreKeyIdOneofCase {
      get { return signedPreKeyIdOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignedPreKeyIdOneof() {
      signedPreKeyIdOneofCase_ = SignedPreKeyIdOneofOneofCase.None;
      signedPreKeyIdOneof_ = null;
    }

    private object baseKeyOneof_;
    /// <summary>Enum of possible cases for the "baseKey_oneof" oneof.</summary>
    public enum BaseKeyOneofOneofCase {
      None = 0,
      BaseKey = 2,
    }
    private BaseKeyOneofOneofCase baseKeyOneofCase_ = BaseKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseKeyOneofOneofCase BaseKeyOneofCase {
      get { return baseKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseKeyOneof() {
      baseKeyOneofCase_ = BaseKeyOneofOneofCase.None;
      baseKeyOneof_ = null;
    }

    private object identityKeyOneof_;
    /// <summary>Enum of possible cases for the "identityKey_oneof" oneof.</summary>
    public enum IdentityKeyOneofOneofCase {
      None = 0,
      IdentityKey = 3,
    }
    private IdentityKeyOneofOneofCase identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdentityKeyOneofOneofCase IdentityKeyOneofCase {
      get { return identityKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdentityKeyOneof() {
      identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
      identityKeyOneof_ = null;
    }

    private object messageOneof_;
    /// <summary>Enum of possible cases for the "message_oneof" oneof.</summary>
    public enum MessageOneofOneofCase {
      None = 0,
      Message = 4,
    }
    private MessageOneofOneofCase messageOneofCase_ = MessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofOneofCase MessageOneofCase {
      get { return messageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessageOneof() {
      messageOneofCase_ = MessageOneofOneofCase.None;
      messageOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreKeySignalMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreKeySignalMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegistrationId != other.RegistrationId) return false;
      if (PreKeyId != other.PreKeyId) return false;
      if (SignedPreKeyId != other.SignedPreKeyId) return false;
      if (BaseKey != other.BaseKey) return false;
      if (IdentityKey != other.IdentityKey) return false;
      if (Message != other.Message) return false;
      if (RegistrationIdOneofCase != other.RegistrationIdOneofCase) return false;
      if (PreKeyIdOneofCase != other.PreKeyIdOneofCase) return false;
      if (SignedPreKeyIdOneofCase != other.SignedPreKeyIdOneofCase) return false;
      if (BaseKeyOneofCase != other.BaseKeyOneofCase) return false;
      if (IdentityKeyOneofCase != other.IdentityKeyOneofCase) return false;
      if (MessageOneofCase != other.MessageOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (registrationIdOneofCase_ == RegistrationIdOneofOneofCase.RegistrationId) hash ^= RegistrationId.GetHashCode();
      if (preKeyIdOneofCase_ == PreKeyIdOneofOneofCase.PreKeyId) hash ^= PreKeyId.GetHashCode();
      if (signedPreKeyIdOneofCase_ == SignedPreKeyIdOneofOneofCase.SignedPreKeyId) hash ^= SignedPreKeyId.GetHashCode();
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) hash ^= BaseKey.GetHashCode();
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) hash ^= IdentityKey.GetHashCode();
      if (messageOneofCase_ == MessageOneofOneofCase.Message) hash ^= Message.GetHashCode();
      hash ^= (int) registrationIdOneofCase_;
      hash ^= (int) preKeyIdOneofCase_;
      hash ^= (int) signedPreKeyIdOneofCase_;
      hash ^= (int) baseKeyOneofCase_;
      hash ^= (int) identityKeyOneofCase_;
      hash ^= (int) messageOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (preKeyIdOneofCase_ == PreKeyIdOneofOneofCase.PreKeyId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PreKeyId);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        output.WriteRawTag(18);
        output.WriteBytes(BaseKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        output.WriteRawTag(26);
        output.WriteBytes(IdentityKey);
      }
      if (messageOneofCase_ == MessageOneofOneofCase.Message) {
        output.WriteRawTag(34);
        output.WriteBytes(Message);
      }
      if (registrationIdOneofCase_ == RegistrationIdOneofOneofCase.RegistrationId) {
        output.WriteRawTag(40);
        output.WriteUInt32(RegistrationId);
      }
      if (signedPreKeyIdOneofCase_ == SignedPreKeyIdOneofOneofCase.SignedPreKeyId) {
        output.WriteRawTag(48);
        output.WriteUInt32(SignedPreKeyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (preKeyIdOneofCase_ == PreKeyIdOneofOneofCase.PreKeyId) {
        output.WriteRawTag(8);
        output.WriteUInt32(PreKeyId);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        output.WriteRawTag(18);
        output.WriteBytes(BaseKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        output.WriteRawTag(26);
        output.WriteBytes(IdentityKey);
      }
      if (messageOneofCase_ == MessageOneofOneofCase.Message) {
        output.WriteRawTag(34);
        output.WriteBytes(Message);
      }
      if (registrationIdOneofCase_ == RegistrationIdOneofOneofCase.RegistrationId) {
        output.WriteRawTag(40);
        output.WriteUInt32(RegistrationId);
      }
      if (signedPreKeyIdOneofCase_ == SignedPreKeyIdOneofOneofCase.SignedPreKeyId) {
        output.WriteRawTag(48);
        output.WriteUInt32(SignedPreKeyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (registrationIdOneofCase_ == RegistrationIdOneofOneofCase.RegistrationId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RegistrationId);
      }
      if (preKeyIdOneofCase_ == PreKeyIdOneofOneofCase.PreKeyId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PreKeyId);
      }
      if (signedPreKeyIdOneofCase_ == SignedPreKeyIdOneofOneofCase.SignedPreKeyId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignedPreKeyId);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BaseKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IdentityKey);
      }
      if (messageOneofCase_ == MessageOneofOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreKeySignalMessage other) {
      if (other == null) {
        return;
      }
      switch (other.RegistrationIdOneofCase) {
        case RegistrationIdOneofOneofCase.RegistrationId:
          RegistrationId = other.RegistrationId;
          break;
      }

      switch (other.PreKeyIdOneofCase) {
        case PreKeyIdOneofOneofCase.PreKeyId:
          PreKeyId = other.PreKeyId;
          break;
      }

      switch (other.SignedPreKeyIdOneofCase) {
        case SignedPreKeyIdOneofOneofCase.SignedPreKeyId:
          SignedPreKeyId = other.SignedPreKeyId;
          break;
      }

      switch (other.BaseKeyOneofCase) {
        case BaseKeyOneofOneofCase.BaseKey:
          BaseKey = other.BaseKey;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.MessageOneofCase) {
        case MessageOneofOneofCase.Message:
          Message = other.Message;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PreKeyId = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseKey = input.ReadBytes();
            break;
          }
          case 26: {
            IdentityKey = input.ReadBytes();
            break;
          }
          case 34: {
            Message = input.ReadBytes();
            break;
          }
          case 40: {
            RegistrationId = input.ReadUInt32();
            break;
          }
          case 48: {
            SignedPreKeyId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PreKeyId = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseKey = input.ReadBytes();
            break;
          }
          case 26: {
            IdentityKey = input.ReadBytes();
            break;
          }
          case 34: {
            Message = input.ReadBytes();
            break;
          }
          case 40: {
            RegistrationId = input.ReadUInt32();
            break;
          }
          case 48: {
            SignedPreKeyId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyExchangeMessage : pb::IMessage<KeyExchangeMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyExchangeMessage> _parser = new pb::MessageParser<KeyExchangeMessage>(() => new KeyExchangeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyExchangeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyExchangeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyExchangeMessage(KeyExchangeMessage other) : this() {
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.BaseKeyOneofCase) {
        case BaseKeyOneofOneofCase.BaseKey:
          BaseKey = other.BaseKey;
          break;
      }

      switch (other.RatchetKeyOneofCase) {
        case RatchetKeyOneofOneofCase.RatchetKey:
          RatchetKey = other.RatchetKey;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.BaseKeySignatureOneofCase) {
        case BaseKeySignatureOneofOneofCase.BaseKeySignature:
          BaseKeySignature = other.BaseKeySignature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyExchangeMessage Clone() {
      return new KeyExchangeMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (uint) idOneof_ : 0; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "baseKey" field.</summary>
    public const int BaseKeyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BaseKey {
      get { return baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey ? (pb::ByteString) baseKeyOneof_ : pb::ByteString.Empty; }
      set {
        baseKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        baseKeyOneofCase_ = BaseKeyOneofOneofCase.BaseKey;
      }
    }

    /// <summary>Field number for the "ratchetKey" field.</summary>
    public const int RatchetKeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RatchetKey {
      get { return ratchetKeyOneofCase_ == RatchetKeyOneofOneofCase.RatchetKey ? (pb::ByteString) ratchetKeyOneof_ : pb::ByteString.Empty; }
      set {
        ratchetKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ratchetKeyOneofCase_ = RatchetKeyOneofOneofCase.RatchetKey;
      }
    }

    /// <summary>Field number for the "identityKey" field.</summary>
    public const int IdentityKeyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString IdentityKey {
      get { return identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey ? (pb::ByteString) identityKeyOneof_ : pb::ByteString.Empty; }
      set {
        identityKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        identityKeyOneofCase_ = IdentityKeyOneofOneofCase.IdentityKey;
      }
    }

    /// <summary>Field number for the "baseKeySignature" field.</summary>
    public const int BaseKeySignatureFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BaseKeySignature {
      get { return baseKeySignatureOneofCase_ == BaseKeySignatureOneofOneofCase.BaseKeySignature ? (pb::ByteString) baseKeySignatureOneof_ : pb::ByteString.Empty; }
      set {
        baseKeySignatureOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        baseKeySignatureOneofCase_ = BaseKeySignatureOneofOneofCase.BaseKeySignature;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object baseKeyOneof_;
    /// <summary>Enum of possible cases for the "baseKey_oneof" oneof.</summary>
    public enum BaseKeyOneofOneofCase {
      None = 0,
      BaseKey = 2,
    }
    private BaseKeyOneofOneofCase baseKeyOneofCase_ = BaseKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseKeyOneofOneofCase BaseKeyOneofCase {
      get { return baseKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseKeyOneof() {
      baseKeyOneofCase_ = BaseKeyOneofOneofCase.None;
      baseKeyOneof_ = null;
    }

    private object ratchetKeyOneof_;
    /// <summary>Enum of possible cases for the "ratchetKey_oneof" oneof.</summary>
    public enum RatchetKeyOneofOneofCase {
      None = 0,
      RatchetKey = 3,
    }
    private RatchetKeyOneofOneofCase ratchetKeyOneofCase_ = RatchetKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RatchetKeyOneofOneofCase RatchetKeyOneofCase {
      get { return ratchetKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRatchetKeyOneof() {
      ratchetKeyOneofCase_ = RatchetKeyOneofOneofCase.None;
      ratchetKeyOneof_ = null;
    }

    private object identityKeyOneof_;
    /// <summary>Enum of possible cases for the "identityKey_oneof" oneof.</summary>
    public enum IdentityKeyOneofOneofCase {
      None = 0,
      IdentityKey = 4,
    }
    private IdentityKeyOneofOneofCase identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdentityKeyOneofOneofCase IdentityKeyOneofCase {
      get { return identityKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdentityKeyOneof() {
      identityKeyOneofCase_ = IdentityKeyOneofOneofCase.None;
      identityKeyOneof_ = null;
    }

    private object baseKeySignatureOneof_;
    /// <summary>Enum of possible cases for the "baseKeySignature_oneof" oneof.</summary>
    public enum BaseKeySignatureOneofOneofCase {
      None = 0,
      BaseKeySignature = 5,
    }
    private BaseKeySignatureOneofOneofCase baseKeySignatureOneofCase_ = BaseKeySignatureOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseKeySignatureOneofOneofCase BaseKeySignatureOneofCase {
      get { return baseKeySignatureOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseKeySignatureOneof() {
      baseKeySignatureOneofCase_ = BaseKeySignatureOneofOneofCase.None;
      baseKeySignatureOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyExchangeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyExchangeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BaseKey != other.BaseKey) return false;
      if (RatchetKey != other.RatchetKey) return false;
      if (IdentityKey != other.IdentityKey) return false;
      if (BaseKeySignature != other.BaseKeySignature) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (BaseKeyOneofCase != other.BaseKeyOneofCase) return false;
      if (RatchetKeyOneofCase != other.RatchetKeyOneofCase) return false;
      if (IdentityKeyOneofCase != other.IdentityKeyOneofCase) return false;
      if (BaseKeySignatureOneofCase != other.BaseKeySignatureOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) hash ^= BaseKey.GetHashCode();
      if (ratchetKeyOneofCase_ == RatchetKeyOneofOneofCase.RatchetKey) hash ^= RatchetKey.GetHashCode();
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) hash ^= IdentityKey.GetHashCode();
      if (baseKeySignatureOneofCase_ == BaseKeySignatureOneofOneofCase.BaseKeySignature) hash ^= BaseKeySignature.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) baseKeyOneofCase_;
      hash ^= (int) ratchetKeyOneofCase_;
      hash ^= (int) identityKeyOneofCase_;
      hash ^= (int) baseKeySignatureOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        output.WriteRawTag(18);
        output.WriteBytes(BaseKey);
      }
      if (ratchetKeyOneofCase_ == RatchetKeyOneofOneofCase.RatchetKey) {
        output.WriteRawTag(26);
        output.WriteBytes(RatchetKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        output.WriteRawTag(34);
        output.WriteBytes(IdentityKey);
      }
      if (baseKeySignatureOneofCase_ == BaseKeySignatureOneofOneofCase.BaseKeySignature) {
        output.WriteRawTag(42);
        output.WriteBytes(BaseKeySignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        output.WriteRawTag(18);
        output.WriteBytes(BaseKey);
      }
      if (ratchetKeyOneofCase_ == RatchetKeyOneofOneofCase.RatchetKey) {
        output.WriteRawTag(26);
        output.WriteBytes(RatchetKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        output.WriteRawTag(34);
        output.WriteBytes(IdentityKey);
      }
      if (baseKeySignatureOneofCase_ == BaseKeySignatureOneofOneofCase.BaseKeySignature) {
        output.WriteRawTag(42);
        output.WriteBytes(BaseKeySignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (baseKeyOneofCase_ == BaseKeyOneofOneofCase.BaseKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BaseKey);
      }
      if (ratchetKeyOneofCase_ == RatchetKeyOneofOneofCase.RatchetKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RatchetKey);
      }
      if (identityKeyOneofCase_ == IdentityKeyOneofOneofCase.IdentityKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IdentityKey);
      }
      if (baseKeySignatureOneofCase_ == BaseKeySignatureOneofOneofCase.BaseKeySignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BaseKeySignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyExchangeMessage other) {
      if (other == null) {
        return;
      }
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.BaseKeyOneofCase) {
        case BaseKeyOneofOneofCase.BaseKey:
          BaseKey = other.BaseKey;
          break;
      }

      switch (other.RatchetKeyOneofCase) {
        case RatchetKeyOneofOneofCase.RatchetKey:
          RatchetKey = other.RatchetKey;
          break;
      }

      switch (other.IdentityKeyOneofCase) {
        case IdentityKeyOneofOneofCase.IdentityKey:
          IdentityKey = other.IdentityKey;
          break;
      }

      switch (other.BaseKeySignatureOneofCase) {
        case BaseKeySignatureOneofOneofCase.BaseKeySignature:
          BaseKeySignature = other.BaseKeySignature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseKey = input.ReadBytes();
            break;
          }
          case 26: {
            RatchetKey = input.ReadBytes();
            break;
          }
          case 34: {
            IdentityKey = input.ReadBytes();
            break;
          }
          case 42: {
            BaseKeySignature = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseKey = input.ReadBytes();
            break;
          }
          case 26: {
            RatchetKey = input.ReadBytes();
            break;
          }
          case 34: {
            IdentityKey = input.ReadBytes();
            break;
          }
          case 42: {
            BaseKeySignature = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SenderKeyMessage : pb::IMessage<SenderKeyMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SenderKeyMessage> _parser = new pb::MessageParser<SenderKeyMessage>(() => new SenderKeyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SenderKeyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SenderKeyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SenderKeyMessage(SenderKeyMessage other) : this() {
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.IterationOneofCase) {
        case IterationOneofOneofCase.Iteration:
          Iteration = other.Iteration;
          break;
      }

      switch (other.CiphertextOneofCase) {
        case CiphertextOneofOneofCase.Ciphertext:
          Ciphertext = other.Ciphertext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SenderKeyMessage Clone() {
      return new SenderKeyMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (uint) idOneof_ : 0; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "iteration" field.</summary>
    public const int IterationFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Iteration {
      get { return iterationOneofCase_ == IterationOneofOneofCase.Iteration ? (uint) iterationOneof_ : 0; }
      set {
        iterationOneof_ = value;
        iterationOneofCase_ = IterationOneofOneofCase.Iteration;
      }
    }

    /// <summary>Field number for the "ciphertext" field.</summary>
    public const int CiphertextFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Ciphertext {
      get { return ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext ? (pb::ByteString) ciphertextOneof_ : pb::ByteString.Empty; }
      set {
        ciphertextOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ciphertextOneofCase_ = CiphertextOneofOneofCase.Ciphertext;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object iterationOneof_;
    /// <summary>Enum of possible cases for the "iteration_oneof" oneof.</summary>
    public enum IterationOneofOneofCase {
      None = 0,
      Iteration = 2,
    }
    private IterationOneofOneofCase iterationOneofCase_ = IterationOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IterationOneofOneofCase IterationOneofCase {
      get { return iterationOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIterationOneof() {
      iterationOneofCase_ = IterationOneofOneofCase.None;
      iterationOneof_ = null;
    }

    private object ciphertextOneof_;
    /// <summary>Enum of possible cases for the "ciphertext_oneof" oneof.</summary>
    public enum CiphertextOneofOneofCase {
      None = 0,
      Ciphertext = 3,
    }
    private CiphertextOneofOneofCase ciphertextOneofCase_ = CiphertextOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CiphertextOneofOneofCase CiphertextOneofCase {
      get { return ciphertextOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCiphertextOneof() {
      ciphertextOneofCase_ = CiphertextOneofOneofCase.None;
      ciphertextOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SenderKeyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SenderKeyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Iteration != other.Iteration) return false;
      if (Ciphertext != other.Ciphertext) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (IterationOneofCase != other.IterationOneofCase) return false;
      if (CiphertextOneofCase != other.CiphertextOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) hash ^= Iteration.GetHashCode();
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) hash ^= Ciphertext.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) iterationOneofCase_;
      hash ^= (int) ciphertextOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        output.WriteRawTag(16);
        output.WriteUInt32(Iteration);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        output.WriteRawTag(26);
        output.WriteBytes(Ciphertext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        output.WriteRawTag(16);
        output.WriteUInt32(Iteration);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        output.WriteRawTag(26);
        output.WriteBytes(Ciphertext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Iteration);
      }
      if (ciphertextOneofCase_ == CiphertextOneofOneofCase.Ciphertext) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ciphertext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SenderKeyMessage other) {
      if (other == null) {
        return;
      }
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.IterationOneofCase) {
        case IterationOneofOneofCase.Iteration:
          Iteration = other.Iteration;
          break;
      }

      switch (other.CiphertextOneofCase) {
        case CiphertextOneofOneofCase.Ciphertext:
          Ciphertext = other.Ciphertext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Iteration = input.ReadUInt32();
            break;
          }
          case 26: {
            Ciphertext = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Iteration = input.ReadUInt32();
            break;
          }
          case 26: {
            Ciphertext = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SignalSenderKeyDistributionMessage : pb::IMessage<SignalSenderKeyDistributionMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignalSenderKeyDistributionMessage> _parser = new pb::MessageParser<SignalSenderKeyDistributionMessage>(() => new SignalSenderKeyDistributionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignalSenderKeyDistributionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalSenderKeyDistributionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalSenderKeyDistributionMessage(SignalSenderKeyDistributionMessage other) : this() {
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.IterationOneofCase) {
        case IterationOneofOneofCase.Iteration:
          Iteration = other.Iteration;
          break;
      }

      switch (other.ChainKeyOneofCase) {
        case ChainKeyOneofOneofCase.ChainKey:
          ChainKey = other.ChainKey;
          break;
      }

      switch (other.SigningKeyOneofCase) {
        case SigningKeyOneofOneofCase.SigningKey:
          SigningKey = other.SigningKey;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalSenderKeyDistributionMessage Clone() {
      return new SignalSenderKeyDistributionMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (uint) idOneof_ : 0; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "iteration" field.</summary>
    public const int IterationFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Iteration {
      get { return iterationOneofCase_ == IterationOneofOneofCase.Iteration ? (uint) iterationOneof_ : 0; }
      set {
        iterationOneof_ = value;
        iterationOneofCase_ = IterationOneofOneofCase.Iteration;
      }
    }

    /// <summary>Field number for the "chainKey" field.</summary>
    public const int ChainKeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ChainKey {
      get { return chainKeyOneofCase_ == ChainKeyOneofOneofCase.ChainKey ? (pb::ByteString) chainKeyOneof_ : pb::ByteString.Empty; }
      set {
        chainKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        chainKeyOneofCase_ = ChainKeyOneofOneofCase.ChainKey;
      }
    }

    /// <summary>Field number for the "signingKey" field.</summary>
    public const int SigningKeyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SigningKey {
      get { return signingKeyOneofCase_ == SigningKeyOneofOneofCase.SigningKey ? (pb::ByteString) signingKeyOneof_ : pb::ByteString.Empty; }
      set {
        signingKeyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        signingKeyOneofCase_ = SigningKeyOneofOneofCase.SigningKey;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object iterationOneof_;
    /// <summary>Enum of possible cases for the "iteration_oneof" oneof.</summary>
    public enum IterationOneofOneofCase {
      None = 0,
      Iteration = 2,
    }
    private IterationOneofOneofCase iterationOneofCase_ = IterationOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IterationOneofOneofCase IterationOneofCase {
      get { return iterationOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIterationOneof() {
      iterationOneofCase_ = IterationOneofOneofCase.None;
      iterationOneof_ = null;
    }

    private object chainKeyOneof_;
    /// <summary>Enum of possible cases for the "chainKey_oneof" oneof.</summary>
    public enum ChainKeyOneofOneofCase {
      None = 0,
      ChainKey = 3,
    }
    private ChainKeyOneofOneofCase chainKeyOneofCase_ = ChainKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChainKeyOneofOneofCase ChainKeyOneofCase {
      get { return chainKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChainKeyOneof() {
      chainKeyOneofCase_ = ChainKeyOneofOneofCase.None;
      chainKeyOneof_ = null;
    }

    private object signingKeyOneof_;
    /// <summary>Enum of possible cases for the "signingKey_oneof" oneof.</summary>
    public enum SigningKeyOneofOneofCase {
      None = 0,
      SigningKey = 4,
    }
    private SigningKeyOneofOneofCase signingKeyOneofCase_ = SigningKeyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SigningKeyOneofOneofCase SigningKeyOneofCase {
      get { return signingKeyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSigningKeyOneof() {
      signingKeyOneofCase_ = SigningKeyOneofOneofCase.None;
      signingKeyOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignalSenderKeyDistributionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignalSenderKeyDistributionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Iteration != other.Iteration) return false;
      if (ChainKey != other.ChainKey) return false;
      if (SigningKey != other.SigningKey) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (IterationOneofCase != other.IterationOneofCase) return false;
      if (ChainKeyOneofCase != other.ChainKeyOneofCase) return false;
      if (SigningKeyOneofCase != other.SigningKeyOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) hash ^= Iteration.GetHashCode();
      if (chainKeyOneofCase_ == ChainKeyOneofOneofCase.ChainKey) hash ^= ChainKey.GetHashCode();
      if (signingKeyOneofCase_ == SigningKeyOneofOneofCase.SigningKey) hash ^= SigningKey.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) iterationOneofCase_;
      hash ^= (int) chainKeyOneofCase_;
      hash ^= (int) signingKeyOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        output.WriteRawTag(16);
        output.WriteUInt32(Iteration);
      }
      if (chainKeyOneofCase_ == ChainKeyOneofOneofCase.ChainKey) {
        output.WriteRawTag(26);
        output.WriteBytes(ChainKey);
      }
      if (signingKeyOneofCase_ == SigningKeyOneofOneofCase.SigningKey) {
        output.WriteRawTag(34);
        output.WriteBytes(SigningKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        output.WriteRawTag(16);
        output.WriteUInt32(Iteration);
      }
      if (chainKeyOneofCase_ == ChainKeyOneofOneofCase.ChainKey) {
        output.WriteRawTag(26);
        output.WriteBytes(ChainKey);
      }
      if (signingKeyOneofCase_ == SigningKeyOneofOneofCase.SigningKey) {
        output.WriteRawTag(34);
        output.WriteBytes(SigningKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (iterationOneofCase_ == IterationOneofOneofCase.Iteration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Iteration);
      }
      if (chainKeyOneofCase_ == ChainKeyOneofOneofCase.ChainKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ChainKey);
      }
      if (signingKeyOneofCase_ == SigningKeyOneofOneofCase.SigningKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SigningKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignalSenderKeyDistributionMessage other) {
      if (other == null) {
        return;
      }
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.IterationOneofCase) {
        case IterationOneofOneofCase.Iteration:
          Iteration = other.Iteration;
          break;
      }

      switch (other.ChainKeyOneofCase) {
        case ChainKeyOneofOneofCase.ChainKey:
          ChainKey = other.ChainKey;
          break;
      }

      switch (other.SigningKeyOneofCase) {
        case SigningKeyOneofOneofCase.SigningKey:
          SigningKey = other.SigningKey;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Iteration = input.ReadUInt32();
            break;
          }
          case 26: {
            ChainKey = input.ReadBytes();
            break;
          }
          case 34: {
            SigningKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Iteration = input.ReadUInt32();
            break;
          }
          case 26: {
            ChainKey = input.ReadBytes();
            break;
          }
          case 34: {
            SigningKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeviceConsistencyCodeMessage : pb::IMessage<DeviceConsistencyCodeMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConsistencyCodeMessage> _parser = new pb::MessageParser<DeviceConsistencyCodeMessage>(() => new DeviceConsistencyCodeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceConsistencyCodeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::citronindo.cryptolib.signal.protocol.WhisperTextProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConsistencyCodeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConsistencyCodeMessage(DeviceConsistencyCodeMessage other) : this() {
      switch (other.GenerationOneofCase) {
        case GenerationOneofOneofCase.Generation:
          Generation = other.Generation;
          break;
      }

      switch (other.SignatureOneofCase) {
        case SignatureOneofOneofCase.Signature:
          Signature = other.Signature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConsistencyCodeMessage Clone() {
      return new DeviceConsistencyCodeMessage(this);
    }

    /// <summary>Field number for the "generation" field.</summary>
    public const int GenerationFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Generation {
      get { return generationOneofCase_ == GenerationOneofOneofCase.Generation ? (uint) generationOneof_ : 0; }
      set {
        generationOneof_ = value;
        generationOneofCase_ = GenerationOneofOneofCase.Generation;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Signature {
      get { return signatureOneofCase_ == SignatureOneofOneofCase.Signature ? (pb::ByteString) signatureOneof_ : pb::ByteString.Empty; }
      set {
        signatureOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        signatureOneofCase_ = SignatureOneofOneofCase.Signature;
      }
    }

    private object generationOneof_;
    /// <summary>Enum of possible cases for the "generation_oneof" oneof.</summary>
    public enum GenerationOneofOneofCase {
      None = 0,
      Generation = 1,
    }
    private GenerationOneofOneofCase generationOneofCase_ = GenerationOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenerationOneofOneofCase GenerationOneofCase {
      get { return generationOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGenerationOneof() {
      generationOneofCase_ = GenerationOneofOneofCase.None;
      generationOneof_ = null;
    }

    private object signatureOneof_;
    /// <summary>Enum of possible cases for the "signature_oneof" oneof.</summary>
    public enum SignatureOneofOneofCase {
      None = 0,
      Signature = 2,
    }
    private SignatureOneofOneofCase signatureOneofCase_ = SignatureOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignatureOneofOneofCase SignatureOneofCase {
      get { return signatureOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignatureOneof() {
      signatureOneofCase_ = SignatureOneofOneofCase.None;
      signatureOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceConsistencyCodeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceConsistencyCodeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Generation != other.Generation) return false;
      if (Signature != other.Signature) return false;
      if (GenerationOneofCase != other.GenerationOneofCase) return false;
      if (SignatureOneofCase != other.SignatureOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (generationOneofCase_ == GenerationOneofOneofCase.Generation) hash ^= Generation.GetHashCode();
      if (signatureOneofCase_ == SignatureOneofOneofCase.Signature) hash ^= Signature.GetHashCode();
      hash ^= (int) generationOneofCase_;
      hash ^= (int) signatureOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (generationOneofCase_ == GenerationOneofOneofCase.Generation) {
        output.WriteRawTag(8);
        output.WriteUInt32(Generation);
      }
      if (signatureOneofCase_ == SignatureOneofOneofCase.Signature) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (generationOneofCase_ == GenerationOneofOneofCase.Generation) {
        output.WriteRawTag(8);
        output.WriteUInt32(Generation);
      }
      if (signatureOneofCase_ == SignatureOneofOneofCase.Signature) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (generationOneofCase_ == GenerationOneofOneofCase.Generation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Generation);
      }
      if (signatureOneofCase_ == SignatureOneofOneofCase.Signature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceConsistencyCodeMessage other) {
      if (other == null) {
        return;
      }
      switch (other.GenerationOneofCase) {
        case GenerationOneofOneofCase.Generation:
          Generation = other.Generation;
          break;
      }

      switch (other.SignatureOneofCase) {
        case SignatureOneofOneofCase.Signature:
          Signature = other.Signature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Generation = input.ReadUInt32();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Generation = input.ReadUInt32();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
